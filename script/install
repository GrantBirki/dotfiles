#!/bin/bash
############################
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles/dotfiles
############################

if [[ "$CODESPACES" == "true" ]]; then
    echo "detected GitHub codespace"
    # ~/.vscode-remote might need to be deleted
fi

# Determine if the system is a Mac or Linux
os="unknown"
if [[ "$OSTYPE" == "linux-gnu" ]]; then
    echo "Linux detected"
    gitconfig=".gitconfig_linux"
    os="linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Mac detected"
    gitconfig=".gitconfig_mac"
    os="mac"
else
    echo "Unknown OS (or Windows) using defaults"
    gitconfig=".gitconfig"
fi

########## Variables

DOTFILES_REPO_DIR="dotfiles"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )" # dotfiles directory
OLDDIR=~/dotfiles_old # old dotfiles backup directory
FILES=".bash_aliases .bash_logout .bashrc .profile .rubocop.yml .irbrc" # list of files/folders to symlink in homedir

##########

# create dotfiles_old in homedir
echo -n "Creating $OLDDIR for backup of any existing dotfiles in ~/ ..."
mkdir -p $OLDDIR

# move any existing dotfiles in homedir to dotfiles_old directory, then create symlinks from the homedir to any files in the dotfiles directory specified in $FILES
for file in $FILES; do
    if [ -e ~/$file ]; then
        echo "Moving any existing dotfiles from ~/ to $OLDDIR"
        mv ~/$file ~/dotfiles_old/
    else
        echo "Warning: ~/$file does not exist, skipping move."
    fi
    echo "Creating symlink to $file in ~/"
    ln -s $DIR/$DOTFILES_REPO_DIR/$file ~/$file
done

# if we are on a mac, symlink the .bashrc file to the .zshrc file
if [[ $os == "mac" ]]; then
    echo "Moving any existing .zshrc from ~/ to $OLDDIR"
    mv ~/.zshrc ~/dotfiles_old/
    # echo "Creating symlink to .zshrc from .bashrc ~/"
    # ln -s $DIR/$DOTFILES_REPO_DIR/.bashrc ~/.zshrc

    # move karabiner.json to the correct location if the .config/karabiner directory exists
    if [ -d ~/.config/karabiner ]; then
        echo "Moving any existing karabiner.json from ~/ to $OLDDIR/.config/karabiner"
        mkdir -p ~/dotfiles_old/.config/karabiner
        mv ~/.config/karabiner/karabiner.json ~/dotfiles_old/.config/karabiner/
        echo "Creating symlink to karabiner.json in ~/.config/karabiner"
        ln -s $DIR/configs/karabiner/karabiner.json ~/.config/karabiner/karabiner.json
        echo "Note: select ANSI if prompted by Karabiner-Elements"
    else
        echo "No karabiner.json found in ~/.config/karabiner - it will be skipped"
    fi

    # move configs/alacritty/alacritty_mac.toml to the correct location if the .config/alacritty directory exists
    if [ -d ~/.config/alacritty ]; then
        echo "Moving any existing alacritty config from ~/ to $OLDDIR/.config/alacritty"
        mkdir -p ~/dotfiles_old/.config/alacritty
        mv ~/.config/alacritty/alacritty.toml ~/dotfiles_old/.config/alacritty/
        echo "Creating symlink to alacritty config in ~/.config/alacritty"
        ln -s $DIR/configs/alacritty/alacritty_mac.toml ~/.config/alacritty/alacritty.toml
    else
        echo "No alacritty config found in ~/.config/alacritty - it will be skipped"
    fi
fi

# custom .gitconfig logic
if [[ "$CODESPACES" != "true" ]]; then
    echo "Moving any existing .gitconfig from ~/ to $OLDDIR"
    mv ~/.gitconfig ~/dotfiles_old/
    echo "Creating symlink to $gitconfig in ~/"
    ln -s $DIR/$DOTFILES_REPO_DIR/$gitconfig ~/.gitconfig
else
    # If we don't skip it, it almost always breaks commit signing / pushes
    echo "CODESPACES detected: skipping .gitconfig symlink."
fi

echo "Make sure to run 'source ~/.bashrc' to finish applying changes."

echo "Done!"
