#!/bin/bash
############################
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles/dotfiles
############################

# Determine if the system is a Mac or Linux
if [[ "$OSTYPE" == "linux-gnu" ]]; then
    echo "Linux detected"
    gitconfig=".gitconfig_linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Mac detected"
    gitconfig=".gitconfig_mac"
else
    echo "Unknown OS (or Windows) using defaults"
    gitconfig=".gitconfig"
fi

########## Variables

DOTFILES_REPO_DIR="dotfiles"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )" # dotfiles directory
OLDDIR=~/dotfiles_old # old dotfiles backup directory
FILES=".bash_aliases .bash_logout .bashrc .profile .rubocop.yml" # list of files/folders to symlink in homedir

##########

# create dotfiles_old in homedir
echo -n "Creating $OLDDIR for backup of any existing dotfiles in ~/ ..."
mkdir -p $OLDDIR

# move any existing dotfiles in homedir to dotfiles_old directory, then create symlinks from the homedir to any files in the dotfiles directory specified in $FILES
for file in $FILES; do
    echo "Moving any existing dotfiles from ~/ to $OLDDIR"
    mv ~/$file ~/dotfiles_old/
    echo "Creating symlink to $file in ~/"
    ln -s $DIR/$DOTFILES_REPO_DIR/$file ~/$file
done

# custom .gitconfig logic
echo "Moving any existing .gitconfig from ~/ to $OLDDIR"
mv ~/.gitconfig ~/dotfiles_old/
echo "Creating symlink to $gitconfig in ~/"
ln -s $DIR/$DOTFILES_REPO_DIR/$gitconfig ~/.gitconfig

echo "Done!"
